import random

# The obfuscated string
destroyed = b'!vP3\xc2\x91\xc2\x89\x11\x1f\x06C\x17_\x19t)\xc2\x929\x06li\x1d\x1f\xc2\x88*\x19E+4E\x16\x07v1S$\x1a c\x1flcr4> 3vlt\xc2\x85Yj-$0 '.decode('utf-8')

# Function to reverse the obfuscation
def reverse_obfuscation(destroyed, seed):
    # Set initial seed
    random.seed(seed)

    # Reverse the flag calculation
    # Reverse the obfuscation process
    original = ""

    for char in destroyed:
        offset = random.randint(1, 10)
        MyFriend = random.randint(1, 127)
        
        result = ord(char)
        if random.randint(0, 1):
            result -= 0x16

        original_char = chr(((result ^ MyFriend) + offset) % 256)
        original += original_char
    
    return original

# Brute-force the seed
for seed in range(0, 513):
    original = reverse_obfuscation(destroyed, seed)
    print(original)
    # Check if the result matches the expected format of the flag (e.g., starts with "flag{" and ends with "}")
    if original.endswith("}"):
        print(f"Found the seed: {seed}")
        print(f"Original flag: {original}")
        break
